name: Docker Image CI

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      IMAGE_NAME: dm1ller/imagine
      IMAGE_TAG: 1.0.${{ github.run_number }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Build and push docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ./app
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      
      - name: Set up SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN }}

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            OLD_CONTAINER=$(sudo docker ps -q)
            sudo docker stop $OLD_CONTAINER
            sudo docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            sudo docker run -d -p 3000:3000 -e "chatgpt_api= ${{ secrets.CHATGPT_API }}" "mysql_instance= ${{ secrets.MYSQL_INSTANCE }}" "mysql_username= ${{ secrets.MYSQL_USERNAME }}" "mysql_password= ${{ secrets.MYSQL_PASSWORD }}" "mysql_endpoint= ${{ secrets.MYSQL_ENDPOINT }}" "mysql_port= ${{ secrets.MYSQL_PORT }}" ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
